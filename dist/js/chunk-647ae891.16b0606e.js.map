{"version":3,"sources":["webpack:///./src/pages/Search/routes/Songs.vue?bf21","webpack:///./src/pages/Search/routes/Songs.vue","webpack:///./src/pages/Search/routes/Songs.vue?6a02"],"names":["class","songs","song","index","isPlaying","key","clickSong","name","mvId","$router","push","artistsText","albumName","parseTime","durationSecond","totalPageNum","totalPage","LIMIT","setup","data","currentPage","newValue","result","code","value","Math","ceil","songCount","_songs","slice","map","s","id","artists","duration","album","mvid","img","picUrl","albumId","albumImg","length","Object","assign","keyword","oldValue","uploadCurrentPage","store","imgUrl","al","dispatch","components","Pagination","__exports__","render"],"mappings":"mHAAA,W,uJCCOA,MAAM,S,GACFA,MAAM,a,uBACX,eAQQ,cAPN,eAMK,WALH,eAAqB,MAAjBA,MAAM,QACV,eAA0B,MAAtBA,MAAM,QAAO,QACjB,eAA0B,MAAtBA,MAAM,UAAS,MACnB,eAAyB,MAArBA,MAAM,SAAQ,MAClB,eAA4B,MAAxBA,MAAM,YAAW,U,SAWjBA,MAAM,O,SACLA,MAAM,+B,aAGPA,MAAM,c,+GAvBlB,eAkCM,MAlCN,EAkCM,CAjCJ,eA+BQ,QA/BR,EA+BQ,CA9BN,EASA,eAoBQ,e,mBAnBN,eAkBK,2BAhBqB,EAAAC,OAAK,SAArBC,EAAMC,G,wBAFhB,eAkBK,MAjBHH,MAAK,gBAAC,WAAU,QAGEG,EAAQ,GAAH,UAAoBD,EAAKE,aAD/CC,IAAKF,G,CAIN,eAGK,KAHL,EAGK,CAF0CD,EAAKE,W,iBAAlD,eAAiE,IAAjE,K,iBACA,eAAmE,wBAAnDD,EAAQ,EAAH,KAAcA,EAAQ,GAAKA,EAAQ,GAAH,MAEvD,eAGK,KAHL,EAGK,CAFH,eAAqD,QAA9C,QAAK,mBAAE,EAAAG,UAAUJ,K,eAAUA,EAAKK,MAAI,KACHL,EAAKM,M,iBAA7C,eAAiG,K,MAA9FR,MAAM,yBAA2C,QAAK,mBAAE,EAAAS,QAAQC,KAAR,cAAoBR,EAAKM,S,mCAEtF,eAA+B,yBAAxBN,EAAKS,aAAW,GACvB,eAA6B,yBAAtBT,EAAKU,WAAS,GACrB,eAA6C,yBAAtC,EAAAC,UAAUX,EAAKY,iBAAc,I,gBAI1C,eAAmD,GAAtCC,aAAc,EAAAC,WAAS,2B,4GAYlCC,EAAQ,GACC,GACbC,MADa,WAEX,IAAIC,EAAO,eAAO,QAEdlB,EAAQ,eAAS,IACjBe,EAAY,eAAI,GAEhBI,EAAc,eAAI,GACtB,eAAQ,cAAeA,GAGvB,gBACE,kBAAMD,EAAK,mBACX,SAACE,GAEC,GAAKA,EAASC,OAAOrB,OAA2B,MAAlBoB,EAASE,KAAvC,CAEA,IAAID,EAASD,EAASC,OAGtBN,EAAUQ,MAAQC,KAAKC,KAAKJ,EAAOK,UAAYV,GAG/C,IAAIW,EAASN,EAAOrB,MAAM4B,MAAM,EAAG,IAAIC,KAAI,SAACC,GAC1C,IAAQC,EAA6CD,EAA7CC,GAAIzB,EAAyCwB,EAAzCxB,KAAM0B,EAAmCF,EAAnCE,QAASC,EAA0BH,EAA1BG,SAAUC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,KAC5C,OAAO,eAAmB,CACxBJ,KACAzB,OACA8B,IAAKF,EAAMG,OACXL,UACAC,WACAK,QAASJ,EAAMH,GACfpB,UAAWuB,EAAM5B,KACjBiC,SAAUL,EAAMG,OAChB9B,KAAM4B,OAGVnC,EAAMwC,OAAS,EACfxC,EAAQyC,OAAOC,OAAO1C,EAAO2B,OAKjC,gBACE,kBAAMT,EAAKyB,WACX,SAACvB,EAAUwB,GACLxB,IAAawB,IACfzB,EAAYI,MAAQ,MAM1B,IAAIsB,EAAoB,eAAO,qBAC/B,eAAM1B,GAAa,SAACC,GAClByB,EAAkBzB,MAIpB,IAAM0B,EAAQ,iBA1DR,SA2DSzC,EA3DT,gGA2DN,WAAyBJ,GAAzB,yGACuB,eAAcA,EAAK8B,IAD1C,OACQV,EADR,OAEM0B,EAAS1B,EAAOrB,MAAM,GAAGgD,GAAGX,OAChCpC,EAAKmC,IAAMW,EAEXD,EAAMG,SAAS,kBAAmBhD,GALpC,2CA3DM,wBAmEN,MAAO,CAAED,QAAOe,YAAWV,YAAWO,UAAA,SAExCsC,WAAY,CAAEC,aAAA,O,kCC9GhB,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAE1E,gB","file":"js/chunk-647ae891.16b0606e.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Songs.vue?vue&type=style&index=0&id=70410403&lang=less&scoped=true\"","<template>\r\n  <div class=\"songs\">\r\n    <table class=\"songs-tab\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"num\"></th>\r\n          <th class=\"name\">音乐标题</th>\r\n          <th class=\"author\">歌手</th>\r\n          <th class=\"album\">专辑</th>\r\n          <th class=\"duration\">时长</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          class=\"row-song\"\r\n          v-for=\"(song, index) in songs\"\r\n          :key=\"index\"\r\n          :class=\"{ stripe: index % 2 == 1, playing: song.isPlaying }\"\r\n        >\r\n          <!-- 序号小于10的话, 前面加0 -->\r\n          <td class=\"num\">\r\n            <i class=\"iconfont icon-zuidayinliang\" v-if=\"song.isPlaying\"></i>\r\n            <span v-else>{{ index < 9 ? \"0\" + (index + 1) : index + 1 }}</span>\r\n          </td>\r\n          <td class=\"name tbody\">\r\n            <span @click=\"clickSong(song)\">{{ song.name }}</span>\r\n            <i class=\"iconfont icon-bofangMV\" v-if=\"song.mvId\" @click=\"$router.push(`/mv/${song.mvId}`)\"></i>\r\n          </td>\r\n          <td>{{ song.artistsText }}</td>\r\n          <td>{{ song.albumName }}</td>\r\n          <td>{{ parseTime(song.durationSecond) }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <Pagination :totalPageNum=\"totalPage\"></Pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Pagination from \"@/components/Pagination\"\r\nimport { ref, reactive, provide, watch, inject } from \"vue\"\r\nimport { useStore } from \"vuex\"\r\nimport { reqSongDetail } from \"@/api/music\"\r\nimport { standardizeSongObj } from \"@/utils/business\"\r\nimport { parseTime } from \"@/utils/common\"\r\n\r\nconst LIMIT = 30\r\nexport default {\r\n  setup() {\r\n    let data = inject(\"data\")\r\n\r\n    let songs = reactive([])\r\n    let totalPage = ref(1)\r\n    // 当前页码, 传递给Pagination组件\r\n    let currentPage = ref(1)\r\n    provide(\"currentPage\", currentPage)\r\n\r\n    // 监视data[\"search-songs\"],即搜索到的歌曲\r\n    watch(\r\n      () => data[\"search-songs\"],\r\n      (newValue) => {\r\n        // 如果还没有数据或者请求错误\r\n        if (!newValue.result.songs || newValue.code !== 200) return\r\n\r\n        let result = newValue.result\r\n\r\n        // 处理页码\r\n        totalPage.value = Math.ceil(result.songCount / LIMIT)\r\n\r\n        // 处理歌曲信息\r\n        let _songs = result.songs.slice(0, 30).map((s) => {\r\n          const { id, name, artists, duration, album, mvid } = s\r\n          return standardizeSongObj({\r\n            id,\r\n            name,\r\n            img: album.picUrl,\r\n            artists,\r\n            duration,\r\n            albumId: album.id,\r\n            albumName: album.name,\r\n            albumImg: album.picUrl,\r\n            mvId: mvid,\r\n          })\r\n        })\r\n        songs.length = 0\r\n        songs = Object.assign(songs, _songs)\r\n      }\r\n    )\r\n\r\n    // 监视搜索关键词,如果变化了,就把currentPage重置为1\r\n    watch(\r\n      () => data.keyword,\r\n      (newValue, oldValue) => {\r\n        if (newValue !== oldValue) {\r\n          currentPage.value = 1\r\n        }\r\n      }\r\n    )\r\n\r\n    // 页码改变,通知search,然后search会发送新的请求\r\n    let uploadCurrentPage = inject(\"uploadCurrentPage\")\r\n    watch(currentPage, (newValue) => {\r\n      uploadCurrentPage(newValue)\r\n    })\r\n\r\n    // 点击歌曲后,根据歌曲id去请求完整信息(因为搜索结果返回的歌曲信息不全,没有图片地址,而playPage中需要显示图片)\r\n    const store = useStore()\r\n    async function clickSong(song) {\r\n      const result = await reqSongDetail(song.id)\r\n      let imgUrl = result.songs[0].al.picUrl\r\n      song.img = imgUrl\r\n\r\n      store.dispatch(\"music/startSong\", song)\r\n    }\r\n\r\n    return { songs, totalPage, clickSong, parseTime }\r\n  },\r\n  components: { Pagination },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.songs-tab {\r\n  width: 100%;\r\n  margin-bottom: 15px;\r\n  font-size: @font-size-sm;\r\n  text-align: left;\r\n  line-height: 24px;\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n  table-layout: fixed;\r\n  color: #606266;\r\n  thead {\r\n    border-bottom: 1px solid var(--border);\r\n    th {\r\n      font-weight: normal;\r\n      color: var(--font-color-grey2);\r\n      &.num {\r\n        width: 5%;\r\n      }\r\n      &.name {\r\n        width: 45%;\r\n      }\r\n      &.author,\r\n      &.album {\r\n        width: 20%;\r\n      }\r\n      &.duration {\r\n        width: 10%;\r\n      }\r\n    }\r\n  }\r\n  td,\r\n  th {\r\n    padding: 4px 14px;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  .num {\r\n    color: var(--font-color-grey-shallow);\r\n    text-align: right;\r\n  }\r\n  .name {\r\n    color: var(--font-color-white);\r\n    &.tbody {\r\n      color: @blue;\r\n      i {\r\n        display: inline-block;\r\n        margin-left: 8px;\r\n        margin-top: 1px;\r\n        color: @theme-color;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    span {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .row-song {\r\n    &.stripe {\r\n      background-color: var(--stripe-bg);\r\n    }\r\n    &:hover {\r\n      background-color: var(--playlist-hover-bgcolor);\r\n    }\r\n    &.playing {\r\n      .name,\r\n      .num {\r\n        color: @theme-color;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./Songs.vue?vue&type=template&id=70410403&scoped=true\"\nimport script from \"./Songs.vue?vue&type=script&lang=js\"\nexport * from \"./Songs.vue?vue&type=script&lang=js\"\n\nimport \"./Songs.vue?vue&type=style&index=0&id=70410403&lang=less&scoped=true\"\n\nimport exportComponent from \"E:\\\\Programming\\\\Practice\\\\项目\\\\online-player\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-70410403\"]])\n\nexport default __exports__"],"sourceRoot":""}